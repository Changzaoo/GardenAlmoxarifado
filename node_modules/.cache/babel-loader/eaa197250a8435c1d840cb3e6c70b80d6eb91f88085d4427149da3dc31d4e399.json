{"ast":null,"code":"import{ref,set,onValue}from'firebase/database';import{db}from'../firebaseConfig';import{encryptData,decryptData}from'../services/encryptionService';export const useEmprestimos=()=>{const[emprestimos,setEmprestimos]=useState([]);// Carregar dados ao inicializar\nuseEffect(()=>{const emprestimosRef=ref(db,'emprestimos');onValue(emprestimosRef,snapshot=>{const data=snapshot.val();if(data){setEmprestimos(decryptData(data));}else{setEmprestimos(historicoInicial);}});},[]);const adicionarEmprestimo=(novoEmprestimo,atualizarInventario)=>{// ... lógica existente ...\n// Atualizar Firebase\nconst encryptedData=encryptData([...emprestimos,emprestimo]);set(ref(db,'emprestimos'),encryptedData);return emprestimo;};// Implementar similarmente para outras funções\n};","map":{"version":3,"names":["ref","set","onValue","db","encryptData","decryptData","useEmprestimos","emprestimos","setEmprestimos","useState","useEffect","emprestimosRef","snapshot","data","val","historicoInicial","adicionarEmprestimo","novoEmprestimo","atualizarInventario","encryptedData","emprestimo"],"sources":["C:/Users/vinic/OneDrive/Documentos/Almo/src/hooks/useEmprestimos.js"],"sourcesContent":["import { ref, set, onValue } from 'firebase/database';\r\nimport { db } from '../firebaseConfig';\r\nimport { encryptData, decryptData } from '../services/encryptionService';\r\n\r\nexport const useEmprestimos = () => {\r\n  const [emprestimos, setEmprestimos] = useState([]);\r\n  \r\n  // Carregar dados ao inicializar\r\n  useEffect(() => {\r\n    const emprestimosRef = ref(db, 'emprestimos');\r\n    onValue(emprestimosRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setEmprestimos(decryptData(data));\r\n      } else {\r\n        setEmprestimos(historicoInicial);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const adicionarEmprestimo = (novoEmprestimo, atualizarInventario) => {\r\n    // ... lógica existente ...\r\n    \r\n    // Atualizar Firebase\r\n    const encryptedData = encryptData([...emprestimos, emprestimo]);\r\n    set(ref(db, 'emprestimos'), encryptedData);\r\n    \r\n    return emprestimo;\r\n  };\r\n\r\n  // Implementar similarmente para outras funções\r\n};"],"mappings":"AAAA,OAASA,GAAG,CAAEC,GAAG,CAAEC,OAAO,KAAQ,mBAAmB,CACrD,OAASC,EAAE,KAAQ,mBAAmB,CACtC,OAASC,WAAW,CAAEC,WAAW,KAAQ,+BAA+B,CAExE,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGC,QAAQ,CAAC,EAAE,CAAC,CAElD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAC,cAAc,CAAGX,GAAG,CAACG,EAAE,CAAE,aAAa,CAAC,CAC7CD,OAAO,CAACS,cAAc,CAAGC,QAAQ,EAAK,CACpC,KAAM,CAAAC,IAAI,CAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC,CAC3B,GAAID,IAAI,CAAE,CACRL,cAAc,CAACH,WAAW,CAACQ,IAAI,CAAC,CAAC,CACnC,CAAC,IAAM,CACLL,cAAc,CAACO,gBAAgB,CAAC,CAClC,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,mBAAmB,CAAGA,CAACC,cAAc,CAAEC,mBAAmB,GAAK,CACnE;AAEA;AACA,KAAM,CAAAC,aAAa,CAAGf,WAAW,CAAC,CAAC,GAAGG,WAAW,CAAEa,UAAU,CAAC,CAAC,CAC/DnB,GAAG,CAACD,GAAG,CAACG,EAAE,CAAE,aAAa,CAAC,CAAEgB,aAAa,CAAC,CAE1C,MAAO,CAAAC,UAAU,CACnB,CAAC,CAED;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}