{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\n\n// Credenciais de administração (só você tem acesso a estas informações)\nconst ADMIN_CREDENTIALS = {\n  username: 'admin_almoxarifado',\n  password: 'Jardim2024@Secure',\n  // Hash de segurança para validação extra\n  hash: 'ADM_JARDIN_2024_VINICIUS'\n};\nexport const useAuth = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLogin, setShowLogin] = useState(true);\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [loginError, setLoginError] = useState('');\n  const [showAdminPanel, setShowAdminPanel] = useState(false);\n  const [newCredentials, setNewCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const handleLogin = () => {\n    if (loginData.username === ADMIN_CREDENTIALS.username && loginData.password === ADMIN_CREDENTIALS.password) {\n      setIsAuthenticated(true);\n      setShowLogin(false);\n      setLoginError('');\n    } else {\n      setLoginError('Credenciais inválidas. Acesso negado.');\n      setTimeout(() => setLoginError(''), 3000);\n    }\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setShowLogin(true);\n    setLoginData({\n      username: '',\n      password: ''\n    });\n    setShowAdminPanel(false);\n  };\n  const updateCredentials = () => {\n    if (!newCredentials.username || !newCredentials.password) {\n      alert('Por favor, preencha todos os campos');\n      return;\n    }\n    alert(`Novas credenciais definidas:\\nUsuário: ${newCredentials.username}\\nSenha: ${newCredentials.password}\\n\\nATENÇÃO: Anote essas informações, pois o sistema será reinicializado.`);\n    setNewCredentials({\n      username: '',\n      password: ''\n    });\n    setShowAdminPanel(false);\n  };\n  return {\n    isAuthenticated,\n    showLogin,\n    loginData,\n    setLoginData,\n    showPassword,\n    setShowPassword,\n    loginError,\n    showAdminPanel,\n    setShowAdminPanel,\n    newCredentials,\n    setNewCredentials,\n    handleLogin,\n    handleLogout,\n    updateCredentials\n  };\n};\n_s(useAuth, \"25RDYlXeQ7sbE0ziLi2xAYt1+bQ=\");\nexport default useAuth;","map":{"version":3,"names":["useState","ADMIN_CREDENTIALS","username","password","hash","useAuth","_s","isAuthenticated","setIsAuthenticated","showLogin","setShowLogin","loginData","setLoginData","showPassword","setShowPassword","loginError","setLoginError","showAdminPanel","setShowAdminPanel","newCredentials","setNewCredentials","handleLogin","setTimeout","handleLogout","updateCredentials","alert"],"sources":["C:/Users/vinic/OneDrive/Documentos/Almo/src/hooks/useAuth.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n// Credenciais de administração (só você tem acesso a estas informações)\r\nconst ADMIN_CREDENTIALS = {\r\n  username: 'admin_almoxarifado',\r\n  password: 'Jardim2024@Secure',\r\n  // Hash de segurança para validação extra\r\n  hash: 'ADM_JARDIN_2024_VINICIUS'\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [loginData, setLoginData] = useState({ username: '', password: '' });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loginError, setLoginError] = useState('');\r\n  const [showAdminPanel, setShowAdminPanel] = useState(false);\r\n  const [newCredentials, setNewCredentials] = useState({ username: '', password: '' });\r\n\r\n  const handleLogin = () => {\r\n    if (loginData.username === ADMIN_CREDENTIALS.username && \r\n        loginData.password === ADMIN_CREDENTIALS.password) {\r\n      setIsAuthenticated(true);\r\n      setShowLogin(false);\r\n      setLoginError('');\r\n    } else {\r\n      setLoginError('Credenciais inválidas. Acesso negado.');\r\n      setTimeout(() => setLoginError(''), 3000);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(false);\r\n    setShowLogin(true);\r\n    setLoginData({ username: '', password: '' });\r\n    setShowAdminPanel(false);\r\n  };\r\n\r\n  const updateCredentials = () => {\r\n    if (!newCredentials.username || !newCredentials.password) {\r\n      alert('Por favor, preencha todos os campos');\r\n      return;\r\n    }\r\n    \r\n    alert(`Novas credenciais definidas:\\nUsuário: ${newCredentials.username}\\nSenha: ${newCredentials.password}\\n\\nATENÇÃO: Anote essas informações, pois o sistema será reinicializado.`);\r\n    \r\n    setNewCredentials({ username: '', password: '' });\r\n    setShowAdminPanel(false);\r\n  };\r\n\r\n  return {\r\n    isAuthenticated,\r\n    showLogin,\r\n    loginData,\r\n    setLoginData,\r\n    showPassword,\r\n    setShowPassword,\r\n    loginError,\r\n  showAdminPanel,\r\n  setShowAdminPanel,\r\n    newCredentials,\r\n    setNewCredentials,\r\n    handleLogin,\r\n    handleLogout,\r\n    updateCredentials\r\n  };\r\n};\r\n\r\nexport default useAuth;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA,MAAMC,iBAAiB,GAAG;EACxBC,QAAQ,EAAE,oBAAoB;EAC9BC,QAAQ,EAAE,mBAAmB;EAC7B;EACAC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC;IAAEE,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC1E,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC;IAAEE,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEpF,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIV,SAAS,CAACT,QAAQ,KAAKD,iBAAiB,CAACC,QAAQ,IACjDS,SAAS,CAACR,QAAQ,KAAKF,iBAAiB,CAACE,QAAQ,EAAE;MACrDK,kBAAkB,CAAC,IAAI,CAAC;MACxBE,YAAY,CAAC,KAAK,CAAC;MACnBM,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MACLA,aAAa,CAAC,uCAAuC,CAAC;MACtDM,UAAU,CAAC,MAAMN,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC3C;EACF,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBf,kBAAkB,CAAC,KAAK,CAAC;IACzBE,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC;MAAEV,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IAC5Ce,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACL,cAAc,CAACjB,QAAQ,IAAI,CAACiB,cAAc,CAAChB,QAAQ,EAAE;MACxDsB,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACF;IAEAA,KAAK,CAAC,0CAA0CN,cAAc,CAACjB,QAAQ,YAAYiB,cAAc,CAAChB,QAAQ,2EAA2E,CAAC;IAEtLiB,iBAAiB,CAAC;MAAElB,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IACjDe,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,OAAO;IACLX,eAAe;IACfE,SAAS;IACTE,SAAS;IACTC,YAAY;IACZC,YAAY;IACZC,eAAe;IACfC,UAAU;IACZE,cAAc;IACdC,iBAAiB;IACfC,cAAc;IACdC,iBAAiB;IACjBC,WAAW;IACXE,YAAY;IACZC;EACF,CAAC;AACH,CAAC;AAAClB,EAAA,CAxDWD,OAAO;AA0DpB,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}