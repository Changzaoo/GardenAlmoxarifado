{"ast":null,"code":"var _s = $RefreshSig$();\nimport { ref, set, onValue } from 'firebase/database';\nimport { db } from '../firebaseConfig';\nimport { encryptData, decryptData } from '../services/encryptionService';\nexport const useEmprestimos = () => {\n  _s();\n  const [emprestimos, setEmprestimos] = useState([]);\n\n  // Carregar dados ao inicializar\n  useEffect(() => {\n    const emprestimosRef = ref(db, 'emprestimos');\n    onValue(emprestimosRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        setEmprestimos(decryptData(data));\n      } else {\n        setEmprestimos(historicoInicial);\n      }\n    });\n  }, []);\n  const adicionarEmprestimo = (novoEmprestimo, atualizarInventario) => {\n    // ... lógica existente ...\n\n    // Atualizar Firebase\n    const encryptedData = encryptData([...emprestimos, emprestimo]);\n    set(ref(db, 'emprestimos'), encryptedData);\n    return emprestimo;\n  };\n\n  // Implementar similarmente para outras funções\n};\n_s(useEmprestimos, \"94/6FWUAORTl5kEEVVhrqk6ZElk=\");","map":{"version":3,"names":["ref","set","onValue","db","encryptData","decryptData","useEmprestimos","_s","emprestimos","setEmprestimos","useState","useEffect","emprestimosRef","snapshot","data","val","historicoInicial","adicionarEmprestimo","novoEmprestimo","atualizarInventario","encryptedData","emprestimo"],"sources":["C:/Users/vinic/OneDrive/Documentos/Almo/src/components/hooks/useEmprestimos.js"],"sourcesContent":["import { ref, set, onValue } from 'firebase/database';\r\nimport { db } from '../firebaseConfig';\r\nimport { encryptData, decryptData } from '../services/encryptionService';\r\n\r\nexport const useEmprestimos = () => {\r\n  const [emprestimos, setEmprestimos] = useState([]);\r\n  \r\n  // Carregar dados ao inicializar\r\n  useEffect(() => {\r\n    const emprestimosRef = ref(db, 'emprestimos');\r\n    onValue(emprestimosRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setEmprestimos(decryptData(data));\r\n      } else {\r\n        setEmprestimos(historicoInicial);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const adicionarEmprestimo = (novoEmprestimo, atualizarInventario) => {\r\n    // ... lógica existente ...\r\n    \r\n    // Atualizar Firebase\r\n    const encryptedData = encryptData([...emprestimos, emprestimo]);\r\n    set(ref(db, 'emprestimos'), encryptedData);\r\n    \r\n    return emprestimo;\r\n  };\r\n\r\n  // Implementar similarmente para outras funções\r\n};"],"mappings":";AAAA,SAASA,GAAG,EAAEC,GAAG,EAAEC,OAAO,QAAQ,mBAAmB;AACrD,SAASC,EAAE,QAAQ,mBAAmB;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,+BAA+B;AAExE,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMC,cAAc,GAAGZ,GAAG,CAACG,EAAE,EAAE,aAAa,CAAC;IAC7CD,OAAO,CAACU,cAAc,EAAGC,QAAQ,IAAK;MACpC,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC3B,IAAID,IAAI,EAAE;QACRL,cAAc,CAACJ,WAAW,CAACS,IAAI,CAAC,CAAC;MACnC,CAAC,MAAM;QACLL,cAAc,CAACO,gBAAgB,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAGA,CAACC,cAAc,EAAEC,mBAAmB,KAAK;IACnE;;IAEA;IACA,MAAMC,aAAa,GAAGhB,WAAW,CAAC,CAAC,GAAGI,WAAW,EAAEa,UAAU,CAAC,CAAC;IAC/DpB,GAAG,CAACD,GAAG,CAACG,EAAE,EAAE,aAAa,CAAC,EAAEiB,aAAa,CAAC;IAE1C,OAAOC,UAAU;EACnB,CAAC;;EAED;AACF,CAAC;AAACd,EAAA,CA3BWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}