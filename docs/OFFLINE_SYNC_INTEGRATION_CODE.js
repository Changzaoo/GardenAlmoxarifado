/**
 * C√ìDIGO PARA ADICIONAR ABA DE SINCRONIZA√á√ÉO NO WORKFLOW.JSX
 * 
 * Copie e cole estas se√ß√µes nos locais indicados
 */

// ====================================================================
// 1Ô∏è‚É£ NO ARRAY DE ABAS DO MENU (procure por "const abasMenu = [")
// ====================================================================

// Adicione esta nova aba no array abasMenu:
{
  id: 'sincronizacao',
  label: 'Sincroniza√ß√£o',
  icon: <RefreshCw className="w-5 h-5" />,
  nivelMinimo: NIVEIS_PERMISSAO.FUNCIONARIO,
  descricao: 'Gerenciar dados offline e sincroniza√ß√£o'
},

// ====================================================================
// 2Ô∏è‚É£ NA SE√á√ÉO DE RENDERIZA√á√ÉO DE CONTE√öDO (ap√≥s outras abas)
// ====================================================================

// Adicione esta se√ß√£o ap√≥s as outras abas (ex: ap√≥s a aba 'mensagens'):
{abaAtiva === 'sincronizacao' && (
  <div className="max-w-4xl mx-auto p-6">
    {/* Header */}
    <div className="mb-6">
      <h2 className="text-3xl font-bold text-gray-900 dark:text-white mb-2 flex items-center gap-3">
        <RefreshCw className={`w-8 h-8 ${isSyncing ? 'animate-spin text-blue-500' : 'text-gray-700 dark:text-gray-300'}`} />
        Sincroniza√ß√£o Offline
      </h2>
      <p className="text-gray-600 dark:text-gray-400">
        Gerencie o download e cache de dados para uso offline
      </p>
    </div>

    {/* Componente de Status */}
    <OfflineSyncStatus
      isOnline={isOnline}
      isSyncing={isSyncing}
      syncProgress={syncProgress}
      lastSyncTime={lastSyncTime}
      error={syncError}
      onSync={() => syncAllCollections(true)}
      onClearCache={clearCache}
      cachedData={cachedData}
      cacheAge={cacheAge}
    />

    {/* Informa√ß√µes Adicionais */}
    <div className="mt-6 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-xl p-6">
      <h3 className="text-lg font-semibold text-blue-900 dark:text-blue-100 mb-3 flex items-center gap-2">
        <Info className="w-5 h-5" />
        Como funciona?
      </h3>
      <ul className="space-y-2 text-sm text-blue-800 dark:text-blue-200">
        <li className="flex items-start gap-2">
          <CheckCircle className="w-4 h-4 mt-0.5 flex-shrink-0" />
          <span><strong>Download Autom√°tico:</strong> Todos os dados s√£o baixados quando voc√™ abre o aplicativo pela primeira vez</span>
        </li>
        <li className="flex items-start gap-2">
          <CheckCircle className="w-4 h-4 mt-0.5 flex-shrink-0" />
          <span><strong>Compress√£o Inteligente:</strong> Dados grandes s√£o comprimidos com Python para economizar espa√ßo</span>
        </li>
        <li className="flex items-start gap-2">
          <CheckCircle className="w-4 h-4 mt-0.5 flex-shrink-0" />
          <span><strong>Modo Offline:</strong> O aplicativo funciona 100% sem internet ap√≥s a primeira sincroniza√ß√£o</span>
        </li>
        <li className="flex items-start gap-2">
          <CheckCircle className="w-4 h-4 mt-0.5 flex-shrink-0" />
          <span><strong>Atualiza√ß√£o Autom√°tica:</strong> Quando online, os dados s√£o atualizados automaticamente em tempo real</span>
        </li>
      </ul>
    </div>

    {/* Dicas de Uso */}
    <div className="mt-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-xl p-6">
      <h3 className="text-lg font-semibold text-yellow-900 dark:text-yellow-100 mb-3 flex items-center gap-2">
        <Lightbulb className="w-5 h-5" />
        Dicas de Uso
      </h3>
      <ul className="space-y-2 text-sm text-yellow-800 dark:text-yellow-200">
        <li className="flex items-start gap-2">
          <span>üí°</span>
          <span>Sincronize regularmente para ter os dados mais recentes</span>
        </li>
        <li className="flex items-start gap-2">
          <span>üí°</span>
          <span>Limpe o cache se notar problemas de performance</span>
        </li>
        <li className="flex items-start gap-2">
          <span>üí°</span>
          <span>Em √°reas sem sinal, o app continua funcionando normalmente</span>
        </li>
        <li className="flex items-start gap-2">
          <span>üí°</span>
          <span>O cache expira ap√≥s 1 hora, mas os dados ainda ficam dispon√≠veis</span>
        </li>
      </ul>
    </div>
  </div>
)}

// ====================================================================
// 3Ô∏è‚É£ IMPORTA√á√ïES ADICIONAIS (adicione no topo do arquivo)
// ====================================================================

// J√° foram adicionadas:
// import OfflineSyncStatus from './OfflineSyncStatus';
// import { useOfflineSync } from '../hooks/useOfflineSync';

// Adicione estes √≠cones se ainda n√£o existirem:
import { RefreshCw, Info, CheckCircle, Lightbulb } from 'lucide-react';

// ====================================================================
// 4Ô∏è‚É£ HOOK J√Å FOI ADICIONADO EM AlmoxarifadoSistema
// ====================================================================

// O hook useOfflineSync j√° est√° sendo usado no componente
// Vari√°veis dispon√≠veis:
// - isOnline
// - isSyncing
// - syncProgress
// - lastSyncTime
// - cachedData
// - syncError
// - syncAllCollections()
// - clearCache()
// - getCachedCollection()
// - cacheAge

// ====================================================================
// 5Ô∏è‚É£ EXEMPLO DE USO EM OUTROS COMPONENTES
// ====================================================================

// Para usar os dados em cache em qualquer lugar do app:
import { useOfflineSync } from '../hooks/useOfflineSync';

function MeuComponente() {
  const { getCachedCollection, isOnline } = useOfflineSync();
  
  // Obter dados (do cache ou Firebase)
  const funcionarios = getCachedCollection('funcionarios');
  const inventario = getCachedCollection('inventario');
  const emprestimos = getCachedCollection('emprestimos');
  
  return (
    <div>
      {/* Indicador de status */}
      {!isOnline && (
        <div className="bg-orange-100 border border-orange-300 rounded-lg p-3 mb-4">
          <p className="text-sm text-orange-800">
            üì¥ Voc√™ est√° offline - usando dados em cache
          </p>
        </div>
      )}
      
      {/* Use os dados normalmente */}
      <div>
        <h3>Funcion√°rios: {funcionarios.length}</h3>
        {funcionarios.map(f => (
          <div key={f.id}>{f.nome}</div>
        ))}
      </div>
    </div>
  );
}

// ====================================================================
// 6Ô∏è‚É£ ALTERNATIVA: WIDGET COMPACTO NA NAVBAR
// ====================================================================

// Se preferir um widget menor na navbar ao inv√©s de aba completa:
<div className="flex items-center gap-3">
  {/* Indicador de Status Online/Offline */}
  <div className="flex items-center gap-2 px-3 py-1.5 rounded-full bg-gray-100 dark:bg-gray-800">
    {isOnline ? (
      <>
        <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
        <span className="text-xs font-medium text-gray-700 dark:text-gray-300">
          Online
        </span>
      </>
    ) : (
      <>
        <div className="w-2 h-2 bg-orange-500 rounded-full" />
        <span className="text-xs font-medium text-gray-700 dark:text-gray-300">
          Offline
        </span>
      </>
    )}
  </div>

  {/* Bot√£o Sincronizar */}
  <button
    onClick={() => syncAllCollections(true)}
    disabled={!isOnline || isSyncing}
    className={`p-2 rounded-lg transition-all ${
      isSyncing || !isOnline
        ? 'bg-gray-200 dark:bg-gray-700 text-gray-400 cursor-not-allowed'
        : 'bg-blue-500 text-white hover:bg-blue-600 active:scale-95'
    }`}
    title="Sincronizar dados"
  >
    <RefreshCw className={`w-4 h-4 ${isSyncing ? 'animate-spin' : ''}`} />
  </button>

  {/* Modal de Sincroniza√ß√£o (opcional) */}
  <button
    onClick={() => setShowSyncModal(true)}
    className="p-2 rounded-lg bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 transition-all"
    title="Ver detalhes da sincroniza√ß√£o"
  >
    <Database className="w-4 h-4 text-gray-700 dark:text-gray-300" />
  </button>
</div>

// ====================================================================
// 7Ô∏è‚É£ MONITORAMENTO E DEBUG
// ====================================================================

// Adicione este useEffect para monitorar mudan√ßas:
useEffect(() => {
  console.log('üìä Status de Sincroniza√ß√£o:', {
    isOnline,
    isSyncing,
    syncProgress: `${Math.round(syncProgress)}%`,
    lastSync: lastSyncTime?.toLocaleString('pt-BR'),
    totalRecords: Object.values(cachedData).reduce((sum, arr) => sum + arr.length, 0),
    cacheAge: cacheAge ? `${cacheAge} minutos` : 'N/A'
  });
}, [isOnline, isSyncing, syncProgress, lastSyncTime, cachedData, cacheAge]);

// Para debug detalhado, adicione no console:
// localStorage.setItem('DEBUG_OFFLINE_SYNC', 'true');

// ====================================================================
// 8Ô∏è‚É£ TOAST DE NOTIFICA√á√ÉO (opcional)
// ====================================================================

// Para notificar usu√°rio quando sincroniza√ß√£o termina:
useEffect(() => {
  if (!isSyncing && lastSyncTime) {
    const totalRecords = Object.values(cachedData).reduce(
      (sum, arr) => sum + arr.length, 
      0
    );
    
    // Mostrar toast de sucesso (se tiver sistema de toast)
    toast.success(`‚úÖ ${totalRecords} registros sincronizados com sucesso!`, {
      duration: 3000
    });
  }
}, [isSyncing, lastSyncTime, cachedData]);

// ====================================================================
// 9Ô∏è‚É£ LIMPAR CACHE AO FAZER LOGOUT
// ====================================================================

// No m√©todo de logout, adicione:
const logout = async () => {
  try {
    // Limpar cache offline
    await clearCache();
    console.log('üóëÔ∏è Cache limpo ao fazer logout');
    
    // ... resto do c√≥digo de logout
    clearUserSession();
    setUsuario(null);
    // etc...
  } catch (error) {
    console.error('Erro ao fazer logout:', error);
  }
};

// ====================================================================
// üéØ RESULTADO ESPERADO
// ====================================================================

/*
AP√ìS IMPLEMENTAR:

1. Nova aba "Sincroniza√ß√£o" aparecer√° no menu
2. Ao abrir app, download autom√°tico come√ßar√°
3. Barra de progresso mostrar√° andamento
4. Ap√≥s sync, app funcionar√° offline
5. Ao perder conex√£o, modo offline ativa automaticamente
6. Ao reconectar, sync autom√°tica acontece

LOGS ESPERADOS NO CONSOLE:

üêç Inicializando Pyodide...
‚úÖ Pyodide inicializado com sucesso!
üîÑ Iniciando sincroniza√ß√£o completa...
üì• Baixando cole√ß√£o: usuarios
‚úÖ usuarios: 150 documentos baixados
üóúÔ∏è Comprimindo usuarios (150 itens)...
‚úÖ usuarios comprimido com sucesso
üíæ Usando cache para inventario
üìä Total de registros: 2450
‚úÖ Sincroniza√ß√£o completa finalizada!
*/
