import React from 'react';
import { useTheme } from '../ThemeProvider';
import { X } from 'lucide-react';
import { modalStyles } from '../../styles/modalStyles';

const Modal = ({
  isOpen,
  onClose,
  title,
  children,
  footer,
  size = 'md', // sm, md, lg, xl
  className = '',
}) => {
  const { theme } = useTheme();

  if (!isOpen) return null;

  const sizeClasses = {
    sm: 'max-w-md',
    md: 'max-w-lg',
    lg: 'max-w-2xl',
    xl: 'max-w-4xl',
  };

  return (
    <div className={modalStyles.overlay}>
      <div 
        className={`
          w-full ${sizeClasses[size]} 
          ${modalStyles.container[theme]}
          ${modalStyles.utils.scrollable}
          ${modalStyles.utils.transition}
          ${className}
        `}
        role="dialog"
        aria-modal="true"
      >
        {/* Header */}
        <div className={`px-6 py-4 border-b ${modalStyles.utils.divider[theme]}`}>
          <div className={modalStyles.header.base}>
            <h3 className={`text-lg font-medium ${modalStyles.header.title[theme]}`}>
              {title}
            </h3>
            <button
              onClick={onClose}
              className={`p-1 rounded-full ${modalStyles.closeButton[theme]} ${modalStyles.utils.transition}`}
            >
              <X className="w-5 h-5" />
            </button>
          </div>
        </div>

        {/* Content */}
        <div className="px-6 py-4">
          {children}
        </div>

        {/* Footer */}
        {footer && (
          <div className={`px-6 py-4 border-t ${modalStyles.utils.divider[theme]}`}>
            {footer}
          </div>
        )}
      </div>
    </div>
  );
        </div>
      </div>
    </div>
  );
};

export const useModal = (initialState = false) => {
  const [isOpen, setIsOpen] = React.useState(initialState);
  const open = () => setIsOpen(true);
  const close = () => setIsOpen(false);
  const toggle = () => setIsOpen(prev => !prev);

  return { isOpen, open, close, toggle };
};

export default Modal;
