"use strict";(self.webpackChunkworkflow_control=self.webpackChunkworkflow_control||[]).push([[142],{5142:(e,o,t)=>{t.d(o,{default:()=>i});const i=new class{constructor(){this.SERVICE_UUID="12345678-1234-5678-1234-56789abcdef0",this.CHARACTERISTIC_UUID="12345678-1234-5678-1234-56789abcdef1",this.device=null,this.server=null,this.service=null,this.characteristic=null,this.isConnected=!1,this.discoveredDevices=new Set,this.listeners=new Set,this.autoSync=!0,this.syncQueue=[],this.isSupported="bluetooth"in navigator,this.autoScanEnabled=!1,this.scanInterval=null,this.SCAN_INTERVAL_MS=3e5,this.isMobile=this.detectMobile(),this.permissionGranted=!1,this.isSupported||console.warn("\u26a0\ufe0f Web Bluetooth n\xe3o \xe9 suportado neste navegador")}detectMobile(){const e=navigator.userAgent||navigator.vendor||window.opera;return/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(e.toLowerCase())}async isBluetoothAvailable(){if(console.log("\ud83d\udd0d Verificando disponibilidade Bluetooth..."),console.log("- this.isSupported:",this.isSupported),console.log("- navigator.bluetooth:",navigator.bluetooth),!this.isSupported)return console.warn("\u274c Bluetooth n\xe3o suportado: navigator.bluetooth n\xe3o existe"),!1;try{if(!navigator.bluetooth.getAvailability)return console.warn("\u26a0\ufe0f getAvailability n\xe3o dispon\xedvel, assumindo true"),!0;const e=await navigator.bluetooth.getAvailability();return console.log("\u2705 Bluetooth availability:",e),e}catch(e){return console.error("\u274c Erro ao verificar disponibilidade do Bluetooth:",e),!0}}async requestPermission(){if(!this.isSupported)throw new Error("Bluetooth n\xe3o \xe9 suportado neste dispositivo");console.log("\ud83d\udcf1 Solicitando permiss\xe3o de Bluetooth...");try{if(this.permissionGranted)return console.log("\u2705 Permiss\xe3o j\xe1 concedida"),!0;if(!await this.isBluetoothAvailable())throw new Error("Bluetooth n\xe3o est\xe1 dispon\xedvel. Por favor, ative o Bluetooth nas configura\xe7\xf5es do dispositivo.");return this.notifyListeners("permissionRequested"),!0}catch(e){throw console.error("\u274c Erro ao solicitar permiss\xe3o:",e),e}}startAutoScan(){this.isSupported?this.autoScanEnabled?console.log("\u2139\ufe0f Varredura autom\xe1tica j\xe1 est\xe1 ativa"):(console.log("\ud83d\udd0d Iniciando varredura autom\xe1tica (a cada 5 minutos)..."),this.autoScanEnabled=!0,this.performQuickScan(),this.scanInterval=setInterval(()=>{this.autoScanEnabled&&!this.isConnected&&(console.log("\ud83d\udd04 Executando varredura autom\xe1tica..."),this.performQuickScan())},this.SCAN_INTERVAL_MS),this.notifyListeners("autoScanStarted")):console.warn("\u26a0\ufe0f Varredura autom\xe1tica n\xe3o dispon\xedvel: Bluetooth n\xe3o suportado")}stopAutoScan(){this.scanInterval&&(clearInterval(this.scanInterval),this.scanInterval=null),this.autoScanEnabled=!1,console.log("\u23f9\ufe0f Varredura autom\xe1tica parada"),this.notifyListeners("autoScanStopped")}async performQuickScan(){if(this.isSupported&&!this.isConnected)try{console.log("\ud83d\udce1 Varredura r\xe1pida iniciada..."),this.notifyListeners("scanStarted");const{default:e}=await Promise.resolve().then(t.bind(t,9034)),o=await e.getPendingCount();o>0&&(console.log("\ud83d\udce6 ".concat(o," opera\xe7\xf5es pendentes detectadas")),this.notifyListeners("deviceNearbyWithData",{pendingCount:o,message:"Dispositivos pr\xf3ximos podem ter dados para sincronizar"})),this.notifyListeners("scanCompleted")}catch(e){console.error("\u274c Erro na varredura:",e),this.notifyListeners("scanError",{error:e.message})}}async autoConnectIfAvailable(){if(this.autoSync&&!this.isConnected)try{this.device&&!this.device.gatt.connected&&(console.log("\ud83d\udd04 Tentando reconectar ao dispositivo anterior..."),await this.connect())}catch(e){console.log("\u2139\ufe0f Reconex\xe3o autom\xe1tica n\xe3o dispon\xedvel:",e.message)}}async requestDevice(){if(!this.isSupported)throw new Error("Web Bluetooth n\xe3o \xe9 suportado neste navegador");try{return console.log("\ud83d\udd0d Procurando dispositivos Workflow pr\xf3ximos..."),this.device=await navigator.bluetooth.requestDevice({filters:[{services:[this.SERVICE_UUID]}],optionalServices:[this.SERVICE_UUID]}),console.log("\ud83d\udcf1 Dispositivo encontrado:",this.device.name),this.device.addEventListener("gattserverdisconnected",()=>{console.log("\ud83d\udd0c Dispositivo desconectado"),this.isConnected=!1,this.notifyListeners("disconnected")}),this.device}catch(e){throw console.error("\u274c Erro ao solicitar dispositivo:",e),e}}async connect(){if(!this.device)throw new Error("Nenhum dispositivo selecionado. Use requestDevice() primeiro.");try{return console.log("\ud83d\udd17 Conectando ao dispositivo..."),this.server=await this.device.gatt.connect(),console.log("\u2705 Servidor GATT conectado"),this.service=await this.server.getPrimaryService(this.SERVICE_UUID),console.log("\u2705 Servi\xe7o Workflow encontrado"),this.characteristic=await this.service.getCharacteristic(this.CHARACTERISTIC_UUID),console.log("\u2705 Caracter\xedstica de dados encontrada"),this.isConnected=!0,this.notifyListeners("connected",{device:this.device.name}),await this.startNotifications(),this.autoSync&&await this.syncWithPeer(),!0}catch(e){throw console.error("\u274c Erro ao conectar:",e),this.isConnected=!1,e}}async startNotifications(){if(!this.characteristic)throw new Error("Caracter\xedstica n\xe3o dispon\xedvel");try{await this.characteristic.startNotifications(),console.log("\ud83d\udc42 Escutando notifica\xe7\xf5es do peer"),this.characteristic.addEventListener("characteristicvaluechanged",e=>{this.handleIncomingData(e.target.value)})}catch(e){console.error("\u274c Erro ao iniciar notifica\xe7\xf5es:",e)}}handleIncomingData(e){try{const o=new TextDecoder("utf-8").decode(e),t=JSON.parse(o);console.log("\ud83d\udce5 Dados recebidos do peer:",t),"sync"===t.type?this.processSyncData(t.operations):"request"===t.type&&this.handleSyncRequest(),this.notifyListeners("dataReceived",t)}catch(o){console.error("\u274c Erro ao processar dados recebidos:",o)}}async processSyncData(e){if(!e||0===e.length)return void console.log("\u2139\ufe0f Nenhuma opera\xe7\xe3o para processar");console.log("\ud83d\udce6 Processando ".concat(e.length," opera\xe7\xf5es do peer"));const{default:o}=await Promise.resolve().then(t.bind(t,9034));let i=0;for(const t of e)try{await o.savePendingOperation(t),i++}catch(s){console.error("\u274c Erro ao salvar opera\xe7\xe3o recebida:",s)}console.log("\u2705 ".concat(i," opera\xe7\xf5es salvas localmente")),this.notifyListeners("syncCompleted",{receivedCount:i}),navigator.onLine&&(console.log("\ud83c\udf10 Online detectado, sincronizando com Firebase..."),await o.syncPendingOperations())}async sendData(e){if(!this.isConnected||!this.characteristic)throw new Error("N\xe3o conectado a nenhum dispositivo");try{const o=JSON.stringify(e),t=(new TextEncoder).encode(o),i=20;for(let e=0;e<t.length;e+=i){const o=t.slice(e,e+i);await this.characteristic.writeValue(o)}return console.log("\ud83d\udce4 Dados enviados para peer"),!0}catch(o){throw console.error("\u274c Erro ao enviar dados:",o),o}}async syncWithPeer(){console.log("\ud83d\udd04 Iniciando sincroniza\xe7\xe3o com peer...");const{default:e}=await Promise.resolve().then(t.bind(t,9034)),o=await e.getPendingOperations();if(0===o.length)return console.log("\u2139\ufe0f Nenhuma opera\xe7\xe3o pendente para sincronizar"),void await this.sendData({type:"request",message:"Solicitar opera\xe7\xf5es pendentes"});console.log("\ud83d\udce4 Enviando ".concat(o.length," opera\xe7\xf5es para peer"));try{await this.sendData({type:"sync",operations:o,timestamp:Date.now()}),console.log("\u2705 Sincroniza\xe7\xe3o conclu\xedda"),this.notifyListeners("syncSent",{sentCount:o.length})}catch(i){throw console.error("\u274c Erro na sincroniza\xe7\xe3o:",i),i}}async handleSyncRequest(){console.log("\ud83d\udce8 Solicita\xe7\xe3o de sincroniza\xe7\xe3o recebida"),await this.syncWithPeer()}disconnect(){this.device&&this.device.gatt.connected&&(this.device.gatt.disconnect(),console.log("\ud83d\udd0c Desconectado do dispositivo")),this.device=null,this.server=null,this.service=null,this.characteristic=null,this.isConnected=!1,this.notifyListeners("disconnected")}async scanDevices(){if(!this.isSupported)throw new Error("Web Bluetooth n\xe3o \xe9 suportado");console.log("\ud83d\udd0d Escaneando dispositivos Workflow pr\xf3ximos...");try{return await this.requestDevice()}catch(e){throw console.error("\u274c Erro ao escanear:",e),e}}addListener(e){return this.listeners.add(e),()=>this.listeners.delete(e)}notifyListeners(e,o){this.listeners.forEach(t=>{try{t(e,o)}catch(i){console.error("Erro ao notificar listener:",i)}})}setAutoSync(e){this.autoSync=e,console.log("\ud83d\udd04 Auto-sincroniza\xe7\xe3o ".concat(e?"ativada":"desativada"))}getStatus(){var e;return{isSupported:this.isSupported,isConnected:this.isConnected,deviceName:(null===(e=this.device)||void 0===e?void 0:e.name)||null,autoSync:this.autoSync}}}}}]);